!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/mnt/f/OneDrive - The Chinese University of Hong Kong/intern/21summer/serial-monitor/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/04a983bf/
Application	serialmon/experimental/gui.py	/^class Application(tk.Frame):$/;"	c
Application	serialmon/monitor.py	/^class Application(tk.Frame):$/;"	c
__init__	serialmon/experimental/gui.py	/^    def __init__(self, master=None):$/;"	m	class:Application
__init__	serialmon/monitor.py	/^    def __init__(self, master=None):$/;"	m	class:Application
_animate	serialmon/utils/plotter.py	/^    def _animate(i):$/;"	f	function:array2d_animate	file:
_animate	serialmon/utils/plotter.py	/^    def _animate(i, fname=fname):$/;"	f	function:csv_animate	file:
_read_serial	serialmon/monitor.py	/^    def _read_serial(self):$/;"	m	class:Application
_setbaud	serialmon/experimental/gui.py	/^    def _setbaud(self, baud):$/;"	m	class:Application
_setbaud	serialmon/monitor.py	/^    def _setbaud(self, baud):$/;"	m	class:Application
_setport	serialmon/experimental/gui.py	/^    def _setport(self, port):$/;"	m	class:Application
_setport	serialmon/monitor.py	/^    def _setport(self, port):$/;"	m	class:Application
_update_serial_config	serialmon/experimental/gui.py	/^    def _update_serial_config(self):$/;"	m	class:Application
_update_serial_config	serialmon/monitor.py	/^    def _update_serial_config(self):$/;"	m	class:Application
app	serialmon/experimental/gui.py	/^app = Application(master=root)$/;"	v
array2d_animate	serialmon/utils/plotter.py	/^def array2d_animate(fig, arr, labels):$/;"	f
create_graphs	serialmon/experimental/gui.py	/^    def create_graphs(self):$/;"	m	class:Application
create_graphs	serialmon/monitor.py	/^    def create_graphs(self):$/;"	m	class:Application
create_widgets	serialmon/experimental/gui.py	/^    def create_widgets(self):$/;"	m	class:Application
create_widgets	serialmon/monitor.py	/^    def create_widgets(self):$/;"	m	class:Application
csv_animate	serialmon/utils/plotter.py	/^def csv_animate(fname="arduino_data.csv"):$/;"	f
get_nano_port	serialmon/utils/adaptUSBport.py	/^def get_nano_port():$/;"	f
get_serial_port	serialmon/utils/adaptUSBport.py	/^def get_serial_port():$/;"	f
log_serial_info	serialmon/.ipynb_checkpoints/reader-checkpoint.py	/^def log_serial_info($/;"	f
log_serial_info	serialmon/utils/log.py	/^def log_serial_info($/;"	f
main	serialmon/clitools/.ipynb_checkpoints/print_hello_worlds-checkpoint.py	/^def main(args=None):$/;"	f
main	serialmon/monitor.py	/^def main():$/;"	f
np	serialmon/monitor.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	serialmon/utils/plotter.py	/^import numpy as np$/;"	I	nameref:module:numpy
parser	serialmon/clitools/.ipynb_checkpoints/print_hello_worlds-checkpoint.py	/^def parser():$/;"	f
plot_graphs	serialmon/monitor.py	/^    def plot_graphs(self):$/;"	m	class:Application
plt	serialmon/utils/plotter.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
print_serial_info	serialmon/.ipynb_checkpoints/reader-checkpoint.py	/^def print_serial_info(port_path=get_nano_port(), baud=1_000_000, timeout=1):$/;"	f
print_serial_info	serialmon/utils/log.py	/^def print_serial_info(port_path=None, baud=1_000_000, timeout=1):$/;"	f
refresh_portlist	serialmon/monitor.py	/^    def refresh_portlist(self):$/;"	m	class:Application
root	serialmon/experimental/gui.py	/^root = tk.Tk()$/;"	v
tk	serialmon/experimental/gui.py	/^import tkinter as tk$/;"	I	nameref:module:tkinter
tk	serialmon/monitor.py	/^import tkinter as tk$/;"	I	nameref:module:tkinter
update_tasks	serialmon/experimental/gui.py	/^    def update_tasks(self):$/;"	m	class:Application
